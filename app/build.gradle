apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "car2go.com.endpoint2mock2"
        minSdkVersion 20
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // This is a convenient trick to bind your application to the mock server running on your desktop machine.
        buildConfigField 'String', 'BUILD_HOST_ADDRESS', "\"${InetAddress.getLocalHost().hostAddress}:3000\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // We use Kotlin in this example, but you can use it with Java as well
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // You can use it without RxJava as well, but we'll use it to simplify the example
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.2.1'

    implementation project(':endpoint2mock2')
    kapt project(':endpoint2mock2-compiler')

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"


    implementation 'com.android.support:appcompat-v7:26.1.0'
}
